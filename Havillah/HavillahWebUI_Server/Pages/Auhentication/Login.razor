@page "/"
@using Havillah.ApplicationServices.Authentication.Dto
@layout AuthLayout

<div class="text-center mt-2">
    <h5 class="text-primary">Welcome Back !</h5>
    <p class="text-muted">Sign in to continue to Velzon.</p>
</div>
<div class="p-2 mt-4">
       <form action="https://themesbrand.com/velzon/html/default/index.html">
           <div class="mb-3">
               <label for="username" class="form-label">Username</label>
               <input type="text" class="form-control" id="username" placeholder="Enter username">
           </div>
           <div class="mb-3">
               <div class="float-end">
                   <a href="auth-pass-reset-basic.html" class="text-muted">Forgot password?</a>
               </div>
               <label class="form-label" for="password-input">Password</label>
               <div class="position-relative auth-pass-inputgroup mb-3">
                   <input type="password" class="form-control pe-5 password-input" placeholder="Enter password" id="password-input">
                   <button class="btn btn-link position-absolute end-0 top-0 text-decoration-none text-muted password-addon" type="button" id="password-addon"><i class="ri-eye-fill align-middle"></i></button>
               </div>
           </div>
           <div class="form-check">
               <input class="form-check-input" type="checkbox" value="" id="auth-remember-check">
               <label class="form-check-label" for="auth-remember-check">Remember me</label>
           </div>
           <div class="mt-4">
               @* <button class="btn btn-success w-100" type="submit">Sign In</button> *@
               <a class="btn btn-success w-100" href="/products">Sign In</a>
           </div>
       </form>
   </div>

@code {
    LoginDto LoinDto { get; set; } = new LoginDto();
    string error { get; set; }
    
    async Task OnSubmit()
    {
        error = null;
        try
        {
            await Task.Delay(1000);
    // await authStateProvider.Login(loginRequest);
    // navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}